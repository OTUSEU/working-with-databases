import configuration.DatabaseConnectionConfig
import org.jetbrains.exposed.sql.SchemaUtils
import org.jetbrains.exposed.sql.insert
import org.jetbrains.exposed.sql.insertAndGetId
import org.jetbrains.exposed.sql.selectAll
import org.jetbrains.exposed.sql.transactions.transaction
import repository.model.MapObjectTypeTable
import repository.model.Ship

// –°–æ–∑–¥–∞–Ω–∏–µ –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ë–î
fun main() {
    // –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –±–∞—Ö–µ –¥–∞–Ω–Ω—ã—Ö - –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞–Ω–∏–µ
    DatabaseConnectionConfig.connect
    // –≤—Å–µ –≤—ã–ø–æ–ª–Ω—è—Ç—å –≤ transaction
    // –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–µ–π—à–µ–π —Ç–∞–±–ª–∏—Ü—ã:
/*    transaction {
        // –ø—Ä–µ–∂–¥–µ —á–µ–º –º—ã —Å–æ–∑–¥–∞–¥–∏–º —Ç–∞–±–ª–∏—Ü—É –Ω–∞–¥–æ –µ–µ –æ–ø–∏—Å–∞—Ç—å –≤ MapObjectTypeTable
        SchemaUtils.create(MapObjectTypeTable)
    }
    transaction {
        MapObjectTypeTable.insert {
            // —ç—Ç–æ –¥–æ—Å—Ç—É–ø –∫ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π - –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø—Ä–∏—Å–≤–æ–µ–Ω–∏–µ
           // it[MapObjectTypeTable.symbol] = "\uD830\uDE85"
           // it[symbol] = "\uD830\uDE85"
            it[biliberda] = "üòÖ"
            it[type] = "new_string"
        }
    }
*/

    transaction {
        // –ø—Ä–µ–∂–¥–µ —á–µ–º –º—ã —Å–æ–∑–¥–∞–¥–∏–º —Ç–∞–±–ª–∏—Ü—ã –Ω–∞–¥–æ –µ–µ –æ–ø–∏—Å–∞—Ç—å –≤ MapObjectTypeTable
        SchemaUtils.create(MapObjectTypeTable, Ship)
    }

    transaction {
        val mapObjectId = MapObjectTypeTable.insertAndGetId {
            it[biliberda] = "üòÖ"
            it[type] = "new_string"
        }

        Ship.insert {
            it[map_object_id] = mapObjectId
            it[position] = "1,3,5"
        }
    }

    transaction {
        print(MapObjectTypeTable.selectAll().count())
    }


}
